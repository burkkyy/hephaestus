name: Build and Release

on:
  push:
    branches:
      - main
    tags: ["v*.*.*", "v*.*.*.*"]

jobs:
  linux-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Next Release Tag
        id: generate_next_tag
        uses: amitsingh-007/next-release-tag@v5.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"
          tag_template: "yyyy.mm.dd.i"

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.1
        with:
          vulkan-query-version: 1.4.304.1
          vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Headers, SPIRV-Cross, SPIRV-Tools, SPIRV-Reflect, Glslang, shaderc
          vulkan-use-cache: true

      - name: Test Vulkan SDK Install
        shell: bash
        run: |
          printenv VULKAN_SDK_VERSION
          printenv VULKAN_SDK
          glslangValidator --version

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxinerama-dev libxcursor-dev libxxf86vm-dev libxi-dev libgl1-mesa-dev

      - name: Build Project
        uses: threeal/cmake-action@v2.1.0
        # Add any other CMake options your project needs
        # with:
        #   options: |
        #     BUILD_TESTS=ON
        #     BUILD_EXAMPLES=ON

      - name: Check Project Build
        shell: bash
        run: |
          ls -al build/

      - name: Package Project Build
        shell: bash
        run: |
          mkdir alphane
          cp build/lib/libalphane.a alphane/libalphane.a
          cp -r engine/include/ alphane/include
          tar czf alphane-linux-${{ steps.generate_next_tag.outputs.next_release_tag }}.tar.gz alphane

      - name: Upload Engine Artifact
        uses: actions/upload-artifact@v4
        with:
          name: engine-linux
          path: alphane-linux-*.tar.gz

  windows-build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Next Release Tag
        id: generate_next_tag
        uses: amitsingh-007/next-release-tag@v5.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"
          tag_template: "yyyy.mm.dd.i"

      - name: Prepare MSVC Environment
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.1
        with:
          vulkan-query-version: 1.4.304.1
          vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Headers, SPIRV-Cross, SPIRV-Tools, SPIRV-Reflect, Glslang, shaderc
          vulkan-use-cache: true

      - name: Build Project
        uses: threeal/cmake-action@v2.1.0
        with:
          options: |
            CMAKE_BUILD_TYPE=Release
          build-args: |
            --config Release

      - name: Check Project Build
        shell: powershell
        run: |
          Get-ChildItem -Force
          Get-ChildItem -Force build/
          Get-ChildItem -Force build/lib
          Get-ChildItem -Force build/x64

      - name: Package Project Build
        shell: powershell
        run: |
          $OutputDir = "alphane"
          New-Item -ItemType Directory -Path $OutputDir -Force
          Copy-Item -Path "build/lib/Release/alphane.lib" -Destination "$OutputDir"
          Copy-Item -Path "engine\include\*" -Destination "$OutputDir\include" -Recurse -Force
          Compress-Archive -Path "$OutputDir" -DestinationPath "alphane-windows-${{ steps.generate_next_tag.outputs.next_release_tag }}.zip"

      - name: Upload Engine Artifact
        uses: actions/upload-artifact@v4
        with:
          name: engine-windows
          path: alphane-windows-*.zip

  create-release:
    runs-on: ubuntu-latest
    needs: [linux-build, windows-build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Next Release Tag
        id: generate_next_tag
        uses: amitsingh-007/next-release-tag@v5.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"
          tag_template: "yyyy.mm.dd.i"

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: engine-linux

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: engine-windows

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.generate_next_tag.outputs.next_release_tag }}
          artifacts: |
            ./alphane-linux-*.tar.gz
            ./alphane-windows-*.zip
          draft: false
